// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 Int               @id @default(autoincrement())
  email              String            @unique
  firstname          String?
  lastname           String?
  password           String?
  pii                personal_id?
  transactionParties UserTransactionParty[]
}

model TransactionParty {
  id    Int    @id @default(autoincrement())
  name  String
  email String
  password String
  users UserTransactionParty[]
}

model UserTransactionParty {
  userId           Int
  user             User             @relation(fields: [userId], references: [id])
  transactionPartyId Int
  transactionParty TransactionParty @relation(fields: [transactionPartyId], references: [id])

  @@id([userId, transactionPartyId])
}

model personal_id {
  id                Int         @id @default(autoincrement())
  user_id           Int         @unique
  user              User        @relation(fields: [user_id], references: [id])
  basicPII          basic_pii?  @relation(fields: [basic_piiUser_id], references: [user_id])
  secretPII         secret_pii? @relation(fields: [secret_piiUser_id], references: [user_id])
  basic_piiUser_id  Int?
  secret_piiUser_id Int?
}

model basic_pii {
  user_id     Int           @id
  firstname   String?
  lastname    String?
  email       String?
  personal_id personal_id[]
}

model secret_pii {
  user_id     Int           @id
  ssn         String?
  address     String?
  personal_id personal_id[]
}
